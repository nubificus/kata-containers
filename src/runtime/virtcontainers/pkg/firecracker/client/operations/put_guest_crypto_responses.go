// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kata-containers/kata-containers/src/runtime/virtcontainers/pkg/firecracker/client/models"
)

// PutGuestCryptoReader is a Reader for the PutGuestCrypto structure.
type PutGuestCryptoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutGuestCryptoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPutGuestCryptoNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutGuestCryptoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPutGuestCryptoDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutGuestCryptoNoContent creates a PutGuestCryptoNoContent with default headers values
func NewPutGuestCryptoNoContent() *PutGuestCryptoNoContent {
	return &PutGuestCryptoNoContent{}
}

/*PutGuestCryptoNoContent handles this case with default header values.

Crypto device created/updated
*/
type PutGuestCryptoNoContent struct {
}

func (o *PutGuestCryptoNoContent) Error() string {
	return fmt.Sprintf("[PUT /crypto][%d] putGuestCryptoNoContent ", 204)
}

func (o *PutGuestCryptoNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutGuestCryptoBadRequest creates a PutGuestCryptoBadRequest with default headers values
func NewPutGuestCryptoBadRequest() *PutGuestCryptoBadRequest {
	return &PutGuestCryptoBadRequest{}
}

/*PutGuestCryptoBadRequest handles this case with default header values.

Crypto device cannot be created due to bad input
*/
type PutGuestCryptoBadRequest struct {
	Payload *models.Error
}

func (o *PutGuestCryptoBadRequest) Error() string {
	return fmt.Sprintf("[PUT /crypto][%d] putGuestCryptoBadRequest  %+v", 400, o.Payload)
}

func (o *PutGuestCryptoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutGuestCryptoDefault creates a PutGuestCryptoDefault with default headers values
func NewPutGuestCryptoDefault(code int) *PutGuestCryptoDefault {
	return &PutGuestCryptoDefault{
		_statusCode: code,
	}
}

/*PutGuestCryptoDefault handles this case with default header values.

Internal server error
*/
type PutGuestCryptoDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the put guest crypto default response
func (o *PutGuestCryptoDefault) Code() int {
	return o._statusCode
}

func (o *PutGuestCryptoDefault) Error() string {
	return fmt.Sprintf("[PUT /crypto][%d] putGuestCrypto default  %+v", o._statusCode, o.Payload)
}

func (o *PutGuestCryptoDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
