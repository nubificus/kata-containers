ARG ARCHTAG

FROM ubuntu:latest as artifacts

ARG ARCHTAG

ARG VACCEL_RELEASE=latest
ARG VACCEL_ARTIFACTS_URL=https://github.com/cloudkernels/vaccel/releases/download/${VACCEL_RELEASE}/vaccel_${ARCHTAG}_Release.zip

ARG KATA_RELEASE=2.1.0-alpha2
ARG KATA_ARTIFACTS_URL=https://github.com/kata-containers/kata-containers/releases/download/${KATA_RELEASE}/kata-static-${KATA_RELEASE}-x86_64.tar.xz

# for now find the vaccel-kata components locally
# this will change when kata-vaccel CI/CD is ready
COPY ./kata-vaccel-${ARCHTAG}.tar.gz ./kata-vaccel-${ARCHTAG}.tar.gz

ARG KATA_VACCEL_ARTIFACTS=./kata-vaccel-${ARCHTAG}.tar.gz

ENV DEBIAN_FRONTEND="noninteractive"

RUN apt-get update && apt-get install -y wget unzip xz-utils

# get kata release "official" 
# we will use the rootfs & kernel for default and vsock kata-fc
RUN wget ${KATA_ARTIFACTS_URL} && \
    mkdir /kata-defaults && \
    tar xvf kata-static-${KATA_RELEASE}-x86_64.tar.xz -C /kata-defaults
#    cd /kata-default/opt/kata/share/kata-containers && \
#    cp -L kata-containers.img kata-containers.img.source && \
#    cp -L vmlinux.container vmlinux.container.source

RUN mkdir /kata && \
    tar -xzvf ${KATA_VACCEL_ARTIFACTS} -C /kata/

RUN wget ${VACCEL_ARTIFACTS_URL} && \
    unzip vaccel_${ARCHTAG}_Release.zip -d /vaccel

FROM centos/systemd
#FROM nubificus/systemd
ARG ARCHTAG
RUN echo ARCH="$ARCHTAG"
ARG KUBE_ARCH=amd64
ARG VACCEL_DESTINATION=/opt/kata-artifacts/opt/kata

# Install vAccel release artifacts to container image
COPY --from=artifacts /vaccel/bin/firecracker ${VACCEL_DESTINATION}/bin/firecracker-vaccel
COPY --from=artifacts /vaccel/bin/vaccelrt-agent ${VACCEL_DESTINATION}/bin/
#COPY --from=artifacts /vaccel/lib/libvaccel-jetson.so ${VACCEL_DESTINATION}/lib/
COPY --from=artifacts /vaccel/lib/libvaccel-noop.so ${VACCEL_DESTINATION}/lib/
COPY --from=artifacts /vaccel/lib/libvaccel.so ${VACCEL_DESTINATION}/lib/

COPY --from=artifacts /kata/opt/kata/. ${VACCEL_DESTINATION}/

# Edit the configuration files for each runtime class handler (fc, fc-vaccel, fc-vaccel-virtio)
# fc: no vaccel
# fc-vaccel: vaccel vsock transport
# fc-vaccel-virtio: vaccel virtio transport

ARG FC_VIRTIO_ACCEL_CONFIG=${VACCEL_DESTINATION}/share/defaults/kata-containers/configuration-fc-vaccel-virtio.toml
ARG FC_VSOCK_ACCEL_CONFIG=${VACCEL_DESTINATION}/share/defaults/kata-containers/configuration-fc-vaccel.toml
ARG FC_DEFAULT_CONFIG=${VACCEL_DESTINATION}/share/defaults/kata-containers/configuration-fc.toml

COPY --from=artifacts /kata/opt/kata/share/defaults/kata-containers/configuration-fc.toml ${FC_VIRTIO_ACCEL_CONFIG}
COPY --from=artifacts /kata/opt/kata/share/defaults/kata-containers/configuration-fc.toml ${FC_VSOCK_ACCEL_CONFIG}

RUN \ 
sed -i -- 's~="vaccel"~=""~g' ${FC_DEFAULT_CONFIG} && \
sed -i -- 's~= "vsock"~= "virtio"~g' ${FC_VIRTIO_ACCEL_CONFIG} && \
sed -i -- 's~bin/firecracker~bin/firecracker-vaccel~g' ${FC_VIRTIO_ACCEL_CONFIG} && \
sed -i -- 's~vmlinux.container~vmlinux.container.virtio~g' ${FC_VIRTIO_ACCEL_CONFIG} && \
sed -i -- 's~kata-containers.img~kata-containers.img.virtio~g' ${FC_VIRTIO_ACCEL_CONFIG}

# x86 version uses the kata-release's default kernel & rootfs for vsock
# and nubificus vaccel virtio kernel & rootfs for virtio
# copy the default kernel from kata official release

COPY --from=artifacts /kata-defaults/opt/kata/share/kata-containers/vmlinux.container ${VACCEL_DESTINATION}/share/kata-containers/vmlinux.container
COPY --from=artifacts /kata-defaults/opt/kata/share/kata-containers/kata-containers.img ${VACCEL_DESTINATION}/share/kata-containers/kata-containers.img
COPY --from=artifacts /kata-defaults/opt/kata/bin/firecracker ${VACCEL_DESTINATION}/bin/firecracker

RUN chown -R root:root ${VACCEL_DESTINATION}/

#Add kubectl binary
RUN \
curl -Lso /bin/kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/${KUBE_ARCH}/kubectl && \
chmod +x /bin/kubectl

#Add deploy scripts to container image
COPY scripts ${VACCEL_DESTINATION}/../../scripts

RUN \
ln -s ${VACCEL_DESTINATION}/../../scripts/kata-deploy.sh /usr/bin/kata-deploy

#make sure to inform deploy script that artifacts are installed (noy yet implemented)
RUN touch ${VACCEL_DESTINATION}/.downloaded
